[  {    "type": "post",    "url": "/auth",    "title": "Authenticate user",    "version": "1.0.0",    "name": "AuthUser",    "group": "Auth",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "username",            "description": "<p>User username.</p>"          },          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "password",            "description": "<p>User password.</p>"          }        ]      }    },    "examples": [      {        "title": "Example usage:",        "content": "curl -H \"Content-Type: application/json\" -X POST \\\n  -d '{ \"username\": \"johndoe@gmail.com\", \"password\": \"foo\" }' \\\n  localhost:5000/auth",        "type": "json"      }    ],    "success": {      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "Object",            "optional": false,            "field": "user",            "description": "<p>User object</p>"          },          {            "group": "Success 200",            "type": "ObjectId",            "optional": false,            "field": "user._id",            "description": "<p>User id</p>"          },          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "user.name",            "description": "<p>User name</p>"          },          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "user.username",            "description": "<p>User username</p>"          },          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "token",            "description": "<p>Encoded JWT</p>"          }        ]      },      "examples": [        {          "title": "Success-Response:",          "content": "HTTP/1.1 200 OK\n{\n  \"user\": {\n     \"_id\": \"56bd1da600a526986cf65c80\"\n     \"username\": \"johndoe\"\n   },\n  \"token\": \"eyJhbGc.....lIiwiYWRtaW4iOnRydWV9.TJVA95OrM7E2cBab30RMHrHDcEfxjoYZgeFONFh7HgQ\"\n}",          "type": "json"        }      ]    },    "error": {      "fields": {        "Error 4xx": [          {            "group": "Error 4xx",            "optional": false,            "field": "Unauthorized",            "description": "<p>Incorrect credentials</p>"          }        ]      },      "examples": [        {          "title": "Error-Response:",          "content": "HTTP/1.1 401 Unauthorized\n{\n  \"status\": 401,\n  \"error\": \"Unauthorized\"\n}",          "type": "json"        }      ]    },    "filename": "src/modules/auth/controller.js",    "groupTitle": "Auth"  },  {    "type": "get",    "url": "/auth/github",    "title": "Authenticate github user auth2",    "version": "1.0.0",    "name": "AuthUserGithub",    "group": "Auth",    "examples": [      {        "title": "Example usage:",        "content": "This request should be invoked through a browser\nat http://localhost:5000/auth/github",        "type": "json"      }    ],    "success": {      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "StatusCode",            "optional": false,            "field": "200",            "description": "<p>causes github auth2 service to invoke the authUserGithubCallback of this api group</p>"          }        ]      }    },    "filename": "src/modules/auth/controller.js",    "groupTitle": "Auth"  },  {    "type": "get",    "url": "/auth/linkedin",    "title": "Authenticate linkedin user auth2",    "version": "1.0.0",    "name": "AuthUserGithub",    "group": "Auth",    "examples": [      {        "title": "Example usage:",        "content": "This request should be invoked through a browser\nat http://localhost:5000/auth/linkedin",        "type": "json"      }    ],    "success": {      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "StatusCode",            "optional": false,            "field": "200",            "description": "<p>causes linkedin auth2 service to invoke the authUserLinkedinCallback of this api group</p>"          }        ]      }    },    "filename": "src/modules/auth/controller.js",    "groupTitle": "Auth"  },  {    "type": "get",    "url": "/auth/github/callback",    "title": "Authenticate github user auth2",    "version": "1.0.0",    "name": "AuthUserGithubCallback",    "group": "Auth",    "examples": [      {        "title": "Example usage:",        "content": "This request is invoked by github auth2 service only\nat http://localhost:5000/auth/github/callback",        "type": "json"      }    ],    "success": {      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "Object",            "optional": false,            "field": "user",            "description": "<p>Github user object</p>"          }        ]      },      "examples": [        {          "title": "Success-Response:",          "content": "{\n   \"user\": {\n   \"id\": \"3450000\",\n   \"displayName\": null,\n   \"username\": \"dddvalos\",\n   \"profileUrl\": \"https://github.com/dddvalos\",\n   \"emails\": [\n     {\n       \"value\": \"dimitris.livas@gmail.com\"\n     }\n   ],\n   \"photos\": [\n     {\n       \"value\": \"https://avatars.githubusercontent.com/u/XYZ000?v=3\"\n     }\n   ],\n   ...\n}",          "type": "json"        }      ]    },    "filename": "src/modules/auth/controller.js",    "groupTitle": "Auth"  },  {    "type": "get",    "url": "/auth/google",    "title": "Authenticate google user OIDC",    "version": "1.0.0",    "name": "AuthUserGoogle",    "group": "Auth",    "examples": [      {        "title": "Example usage:",        "content": "This request should be invoked through a browser\nat http://localhost:5000/auth/google",        "type": "json"      }    ],    "success": {      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "StatusCode",            "optional": false,            "field": "200",            "description": "<p>causes google openidconnect service to invoke the authUserGoogleCallback of this api group</p>"          }        ]      }    },    "filename": "src/modules/auth/controller.js",    "groupTitle": "Auth"  },  {    "type": "get",    "url": "/auth/google/callback",    "title": "Authenticate google user OIDC",    "version": "1.0.0",    "name": "AuthUserGoogleCallback",    "group": "Auth",    "examples": [      {        "title": "Example usage:",        "content": "This request is invoked by google openidconnect auth service only\nat http://localhost:5000/auth/google/callback",        "type": "json"      }    ],    "success": {      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "Object",            "optional": false,            "field": "user",            "description": "<p>Google user object</p>"          }        ]      },      "examples": [        {          "title": "Success-Response:",          "content": "{\n   \"user\": {\n     \"id\": \"1122367896542\",\n     \"displayName\": \"Dimitris Vilaos\",\n     \"name\": {\n       \"familyName\": \"Vilaos\",\n       \"givenName\": \"Dimitris\"\n     },\n     \"_json\": {\n       \"kind\": \"plus#personOpenIdConnect\",\n       \"gender\": \"male\",\n       \"sub\": \"1122367896542\",\n       \"name\": \"Dimitris Vilaos\",\n       \"given_name\": \"Dimitris\",\n       \"family_name\": \"Vilaos\",\n       \"profile\": \"https://plus.google.com/11287988665432136\",\n       \"email\": \"dimitris.Vilaos@gmail.com\",\n       \"email_verified\": \"true\"\n     }\n   }\n}",          "type": "json"        }      ]    },    "filename": "src/modules/auth/controller.js",    "groupTitle": "Auth"  },  {    "type": "get",    "url": "/auth/linkedin/callback",    "title": "Authenticate linkedin user auth2",    "version": "1.0.0",    "name": "AuthUserLinkedinCallback",    "group": "Auth",    "examples": [      {        "title": "Example usage:",        "content": "This request is invoked by linkedin auth2 service only\nat http://localhost:5000/auth/linkedin/callback",        "type": "json"      }    ],    "success": {      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "Object",            "optional": false,            "field": "user",            "description": "<p>Github user object</p>"          }        ]      },      "examples": [        {          "title": "Success-Response:",          "content": "{\n   \"user\": {\n   \"id\": \"3450000\",\n   \"displayName\": null,\n   \"username\": \"dddvalos\",\n   \"profileUrl\": \"https://linkedin.com/dddvalos\",\n   \"emails\": [\n     {\n       \"value\": \"dimitris.livas@gmail.com\"\n     }\n   ],\n   \"photos\": [\n     {\n       \"value\": \"https://avatars.githubusercontent.com/u/XYZ000?v=3\"\n     }\n   ],\n   ...\n}",          "type": "json"        }      ]    },    "filename": "src/modules/auth/controller.js",    "groupTitle": "Auth"  },  {    "type": "post",    "url": "/users",    "title": "Create a new user.",    "permission": [      {        "name": "@apiVersion 1.0.0"      }    ],    "name": "CreateUser",    "group": "Users",    "examples": [      {        "title": "Example usage:",        "content": "curl -H \"Content-Type: application/json\" -X POST \\\n  -d '{ \"user\": { \"username\": \"johndoe\", \"password\": \"secretpasas\" } }' \\\n  localhost:5000/users",        "type": "json"      }    ],    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "Object",            "optional": false,            "field": "user",            "description": "<p>User object (required)</p>"          },          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "user.username",            "description": "<p>Username.</p>"          },          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "user.password",            "description": "<p>Password.</p>"          }        ]      }    },    "success": {      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "Object",            "optional": false,            "field": "users",            "description": "<p>User object</p>"          },          {            "group": "Success 200",            "type": "ObjectId",            "optional": false,            "field": "users._id",            "description": "<p>User id</p>"          },          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "users.name",            "description": "<p>User name</p>"          },          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "users.username",            "description": "<p>User username</p>"          }        ]      },      "examples": [        {          "title": "Success-Response:",          "content": "HTTP/1.1 200 OK\n{\n  \"user\": {\n     \"_id\": \"56bd1da600a526986cf65c80\"\n     \"name\": \"John Doe\"\n     \"username\": \"johndoe\"\n  }\n}",          "type": "json"        }      ]    },    "error": {      "fields": {        "Error 4xx": [          {            "group": "Error 4xx",            "optional": false,            "field": "UnprocessableEntity",            "description": "<p>Missing required parameters</p>"          }        ]      },      "examples": [        {          "title": "Error-Response:",          "content": "HTTP/1.1 422 Unprocessable Entity\n{\n  \"status\": 422,\n  \"error\": \"Unprocessable Entity\"\n}",          "type": "json"        }      ]    },    "version": "0.0.0",    "filename": "src/modules/users/controller.js",    "groupTitle": "Users"  },  {    "type": "delete",    "url": "/users/:id",    "title": "Delete a user",    "permission": [      {        "name": "@apiVersion 1.0.0"      }    ],    "name": "DeleteUser",    "group": "Users",    "examples": [      {        "title": "Example usage:",        "content": "curl -H \"Content-Type: application/json\" -X DELETE localhost:5000/users/56bd1da600a526986cf65c80",        "type": "json"      }    ],    "success": {      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "StatusCode",            "optional": false,            "field": "200",            "description": ""          }        ]      },      "examples": [        {          "title": "Success-Response:",          "content": "HTTP/1.1 200 OK\n{\n  \"success\": true\n}",          "type": "json"        }      ]    },    "version": "0.0.0",    "filename": "src/modules/users/controller.js",    "groupTitle": "Users",    "error": {      "fields": {        "Error 4xx": [          {            "group": "Error 4xx",            "optional": false,            "field": "Unauthorized",            "description": "<p>Invalid JWT token</p>"          }        ]      },      "examples": [        {          "title": "Unauthorized-Error:",          "content": "HTTP/1.1 401 Unauthorized\n{\n  \"status\": 401,\n  \"error\": \"Unauthorized\"\n}",          "type": "json"        }      ]    }  },  {    "type": "get",    "url": "/users/:id",    "title": "Get user by id",    "permission": [      {        "name": "user"      }    ],    "version": "1.0.0",    "name": "GetUser",    "group": "Users",    "examples": [      {        "title": "Example usage:",        "content": "curl -H \"Content-Type: application/json\" -X GET localhost:5000/users/56bd1da600a526986cf65c80",        "type": "json"      }    ],    "success": {      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "Object",            "optional": false,            "field": "users",            "description": "<p>User object</p>"          },          {            "group": "Success 200",            "type": "ObjectId",            "optional": false,            "field": "users._id",            "description": "<p>User id</p>"          },          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "users.name",            "description": "<p>User name</p>"          },          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "users.username",            "description": "<p>User username</p>"          }        ]      },      "examples": [        {          "title": "Success-Response:",          "content": "HTTP/1.1 200 OK\n{\n  \"user\": {\n     \"_id\": \"56bd1da600a526986cf65c80\"\n     \"name\": \"John Doe\"\n     \"username\": \"johndoe\"\n  }\n}",          "type": "json"        }      ]    },    "filename": "src/modules/users/controller.js",    "groupTitle": "Users",    "error": {      "fields": {        "Error 4xx": [          {            "group": "Error 4xx",            "optional": false,            "field": "Unauthorized",            "description": "<p>Invalid JWT token</p>"          }        ]      },      "examples": [        {          "title": "Unauthorized-Error:",          "content": "HTTP/1.1 401 Unauthorized\n{\n  \"status\": 401,\n  \"error\": \"Unauthorized\"\n}",          "type": "json"        }      ]    }  },  {    "type": "get",    "url": "/users",    "title": "Get all users",    "permission": [      {        "name": "user"      }    ],    "version": "1.0.0",    "name": "GetUsers",    "group": "Users",    "examples": [      {        "title": "Example usage:",        "content": "curl -H \"Content-Type: application/json\" -X GET localhost:5000/users",        "type": "json"      }    ],    "success": {      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "Object[]",            "optional": false,            "field": "users",            "description": "<p>Array of user objects</p>"          },          {            "group": "Success 200",            "type": "ObjectId",            "optional": false,            "field": "users._id",            "description": "<p>User id</p>"          },          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "users.name",            "description": "<p>User name</p>"          },          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "users.username",            "description": "<p>User username</p>"          }        ]      },      "examples": [        {          "title": "Success-Response:",          "content": "HTTP/1.1 200 OK\n{\n  \"users\": [{\n     \"_id\": \"56bd1da600a526986cf65c80\"\n     \"name\": \"John Doe\"\n     \"username\": \"johndoe\"\n  }]\n}",          "type": "json"        }      ]    },    "filename": "src/modules/users/controller.js",    "groupTitle": "Users",    "error": {      "fields": {        "Error 4xx": [          {            "group": "Error 4xx",            "optional": false,            "field": "Unauthorized",            "description": "<p>Invalid JWT token</p>"          }        ]      },      "examples": [        {          "title": "Unauthorized-Error:",          "content": "HTTP/1.1 401 Unauthorized\n{\n  \"status\": 401,\n  \"error\": \"Unauthorized\"\n}",          "type": "json"        }      ]    }  },  {    "type": "put",    "url": "/users/:id",    "title": "Update a user",    "permission": [      {        "name": "@apiVersion 1.0.0"      }    ],    "name": "UpdateUser",    "group": "Users",    "examples": [      {        "title": "Example usage:",        "content": "curl -H \"Content-Type: application/json\" \\\n  -X PUT -d '{ \"user\": { \"name\": \"Cool new Name\" } }' \\\n  localhost:5000/users/56bd1da600a526986cf65c80",        "type": "json"      }    ],    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "Object",            "optional": false,            "field": "user",            "description": "<p>User object (required)</p>"          },          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "user.name",            "description": "<p>Name.</p>"          },          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "user.username",            "description": "<p>Username.</p>"          }        ]      }    },    "success": {      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "Object",            "optional": false,            "field": "users",            "description": "<p>User object</p>"          },          {            "group": "Success 200",            "type": "ObjectId",            "optional": false,            "field": "users._id",            "description": "<p>User id</p>"          },          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "users.name",            "description": "<p>Updated name</p>"          },          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "users.username",            "description": "<p>Updated username</p>"          }        ]      },      "examples": [        {          "title": "Success-Response:",          "content": "HTTP/1.1 200 OK\n{\n  \"user\": {\n     \"_id\": \"56bd1da600a526986cf65c80\"\n     \"name\": \"Cool new name\"\n     \"username\": \"johndoe\"\n  }\n}",          "type": "json"        }      ]    },    "error": {      "fields": {        "Error 4xx": [          {            "group": "Error 4xx",            "optional": false,            "field": "UnprocessableEntity",            "description": "<p>Missing required parameters</p>"          },          {            "group": "Error 4xx",            "optional": false,            "field": "Unauthorized",            "description": "<p>Invalid JWT token</p>"          }        ]      },      "examples": [        {          "title": "Error-Response:",          "content": "HTTP/1.1 422 Unprocessable Entity\n{\n  \"status\": 422,\n  \"error\": \"Unprocessable Entity\"\n}",          "type": "json"        },        {          "title": "Unauthorized-Error:",          "content": "HTTP/1.1 401 Unauthorized\n{\n  \"status\": 401,\n  \"error\": \"Unauthorized\"\n}",          "type": "json"        }      ]    },    "version": "0.0.0",    "filename": "src/modules/users/controller.js",    "groupTitle": "Users"  }]
